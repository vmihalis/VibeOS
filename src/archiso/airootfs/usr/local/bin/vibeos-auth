#!/bin/bash
# VibeOS Authentication Wrapper
# Handles Claude Code authentication with automatic browser launch

set -e

# Colors for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to start X if needed
ensure_x_running() {
    if [ -z "$DISPLAY" ]; then
        echo -e "${YELLOW}Starting X server in background...${NC}"

        # Start X on display :0 in background
        Xorg :0 &
        X_PID=$!
        sleep 2

        # Start minimal window manager
        DISPLAY=:0 openbox &

        export DISPLAY=:0
        echo -e "${GREEN}X server started on display :0${NC}"
        return 0
    else
        echo -e "${GREEN}X server already running on $DISPLAY${NC}"
        return 0
    fi
}

# Function to extract URL from claude-code output
extract_auth_url() {
    local line="$1"
    # Look for the authorization URL pattern
    if echo "$line" | grep -q "https://claude.ai/oauth/authorize"; then
        # Extract the URL
        url=$(echo "$line" | grep -o 'https://[^[:space:]]*' | head -1)
        echo "$url"
        return 0
    fi
    return 1
}

# Main authentication flow
main() {
    echo -e "${BLUE}========================================${NC}"
    echo -e "${BLUE}    VibeOS Claude Code Authentication${NC}"
    echo -e "${BLUE}========================================${NC}"
    echo ""

    # Check if claude-code is installed
    if ! command -v claude-code &> /dev/null; then
        echo -e "${RED}Error: Claude Code is not installed${NC}"
        echo "Install it with: npm install -g @anthropic-ai/claude-code"
        exit 1
    fi

    # Ensure X is running for browser
    ensure_x_running

    echo -e "${YELLOW}Starting Claude Code authentication...${NC}"
    echo "The browser will open automatically when the auth URL appears."
    echo ""

    # Create a named pipe for capturing output
    PIPE=$(mktemp -u)
    mkfifo "$PIPE"

    # Start monitoring for URL in background
    (
        while IFS= read -r line; do
            echo "$line"  # Display the line

            # Check if this line contains the auth URL
            if url=$(extract_auth_url "$line"); then
                echo ""
                echo -e "${GREEN}Auth URL detected! Opening Firefox...${NC}"

                # Launch Firefox with the URL
                DISPLAY=:0 firefox "$url" &> /dev/null &

                echo -e "${GREEN}Firefox launched on display :0${NC}"
                echo ""
                echo "Steps:"
                echo "1. Complete authentication in Firefox"
                echo "2. Copy the authorization code from the browser"
                echo "3. Paste it below when prompted"
                echo ""
            fi
        done
    ) < "$PIPE" &
    MONITOR_PID=$!

    # Run claude-code auth and pipe output to monitor
    claude-code auth 2>&1 | tee "$PIPE"

    # Cleanup
    kill $MONITOR_PID 2>/dev/null || true
    rm -f "$PIPE"

    echo ""
    echo -e "${GREEN}Authentication process completed!${NC}"
    echo ""
    echo "You can now use Claude Code with your subscription."
    echo "Return to vibesh and try natural language commands!"
}

# Handle interrupts gracefully
trap 'echo -e "\n${YELLOW}Authentication cancelled${NC}"; rm -f "$PIPE" 2>/dev/null; exit 1' INT TERM

# Run main function
main